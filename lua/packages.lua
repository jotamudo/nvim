-- local packer = require("packer")

require("lazy").setup("plugins")

-- packer.startup{
--   function(use)
--     -- Packer can manage itself as an optional plugin
--     use {"wbthomason/packer.nvim", opt = true}
--
--     -- Utils for configs
--     use "norcalli/nvim_utils"
--
--     -- Override default vim.ui.select
--     use {"stevearc/dressing.nvim",
--       config = function()
--         require('dressing').setup()
--       end
--     }
--
--     -- Command legend
--     use "mrjones2014/legendary.nvim"
--     -- Lsp and autocompletion stuff
--     use "neovim/nvim-lspconfig"
--     -- Automatic language server and debug adapter installation
--     use "williamboman/mason.nvim"
--     use "williamboman/mason-lspconfig.nvim"
--     use "jayp0521/mason-nvim-dap.nvim"
--
--     use "nvim-lua/lsp-status.nvim"
--     use {"RishabhRD/nvim-lsputils", requires = "RishabhRD/popfix"}
--     use "jubnzv/virtual-types.nvim"
--
--     use {
--       "https://git.sr.ht/~whynothugo/lsp_lines.nvim",
--       config = function()
--         require("lsp_lines").setup()
--       end,
--     }
--
--     -- use "Olical/conjure"
--     use "udayvir-singh/tangerine.nvim"
--     use "udayvir-singh/hibiscus.nvim"
--
--     -- Debugging :TODO: consider vimspector
--     use "mfussenegger/nvim-dap"
--     use "rcarriga/nvim-dap-ui"
--     use "mfussenegger/nvim-dap-python"
--     use "rcarriga/cmp-dap"
--     use "szw/vim-maximizer" -- Maximizing windows
--
--     -- Tags
--     -- use {'ludovicchabant/vim-gutentags',
--     --   config = function()
--     --     vim.g.gutentags_project_root = {'vhdl_ls.toml', 'Makefile', 'Cargo.toml'}
--     --   end
--     -- }
--
--     -- language specific plugins
--     use 'p00f/clangd_extensions.nvim'
--
--
--     -- spell checking
--     --use {
--     --  'f3fora/cmp-nuspell',
--     --  rocks={'lua-nuspell'}
--     --}
--
--
--
--     -- Lua helpers
--     -- use "folke/lua-dev.nvim"
--     use "folke/neodev.nvim"
--
--     -- Snippets and engines
--     -- Treesitter
--     use {
--       "nvim-treesitter/nvim-treesitter",
--       -- config = function ()
--       --   require('plugins/treesitter')
--       -- end
--     }
--
--     -- useful to make own targets like ip (inner paragraph)
--     use "nvim-treesitter/nvim-treesitter-textobjects"
--
--     -- Fuzzy Finder
--     use {
--       "nvim-telescope/telescope.nvim",
--       requires = {"nvim-lua/popup.nvim", "nvim-lua/plenary.nvim" },
--       -- config = function ()
--       --   require('plugins/telescope')
--       -- end
--     }
--     -- use {'nvim-telescope/telescope-fzf-native.nvim', run = 'make' }
--
--     -- Playing with registers
--     -- use "gennaro-tedesco/nvim-peekup"
--
--     -- Markdown
--     -- use "davidgranstrom/nvim-markdown-preview"
--     use {'iamcco/markdown-preview.nvim', run={'cd app && yarn install'}}
--     use "gabrielelana/vim-markdown"
--     -- use "vim-pandoc/vim-pandoc"
--     -- use "vim-pandoc/vim-pandoc-syntax"
--     -- use {"shime/vim-livedown", run = {"npm install -g livedown"}}
--
--     -- Latex
--     use "lervag/vimtex"
--     use {"KeitaNakamura/tex-conceal.vim", ft = "tex"}
--
--
--     -- Colorscheme
--     use {"npxbr/gruvbox.nvim", requires = {"rktjmp/lush.nvim"}}
--
--
--     -- Lua
--     -- use "bfredl/nvim-luadev"
--     -- use "tjdevries/vlog.nvim"
--     -- use "tjdevries/manillua.nvim"
--     -- lua scratchpads
--     use "rafcamlet/nvim-luapad"
--
--     -- Buffer Line
--     use "romgrk/barbar.nvim"
--
--
--
--     -- File Tree
--     use {
--       "folke/trouble.nvim",
--       requires = "nvim-tree/nvim-web-devicons",
--       config = function()
--         require("trouble").setup {}
--       end
--     }
--
--     use 'nvim-lua/plenary.nvim'
--
--     -- Git integration
--     -- test these
--     use {
--       "TimUntersberger/neogit",
--       requires = {
--         "nvim-lua/plenary.nvim",
--         "sindrets/diffview.nvim"
--       },
--       config = function ()
--         require('plugins/neogit')
--       end
--     }
--     use "samoshkin/vim-mergetool"
--     use 'tpope/vim-fugitive'
--     use {"lewis6991/gitsigns.nvim", requires = {"nvim-lua/plenary.nvim"}}
--     -- safe fallback
--     -- use 'airblade/vim-gitgutter'
--
--     -- Json cool integration
--     use "gennaro-tedesco/nvim-jqx"
--
--     -- use 'gennaro-tedesco/nvim-commaround'
--
--     -- Dot repeater
--     use "tpope/vim-repeat"
--
--     -- Surround
--     use "tpope/vim-surround"
--
--     -- Collaborative editing
--     -- use "jbyuki/instant.nvim"
--
--     -- Playing with motion
--     -- use "tjdevries/train.nvim"
--
--     -- Github Issues and PRs
--     use "pwntester/octo.nvim"
--
--     -- Auto Pairs
--     -- use "cohama/lexima.vim"
--     use "andymass/vim-matchup"
--
--     -- Scratchpads
--     -- use "metakirby5/codi.vim"
--
--     -- code runners
--     use "scott-astatine/Executer.nvim"
--
--     -- Making modes
--     use "Iron-E/nvim-libmodal"
--
--     --web stuff
--     -- use "mattn/emmet-vim"
--
--     -- Project Management, consider nvpm
--     -- use 'windwp/nvim-projectconfig'
--     -- TODO and such for exploring
--     use {
--       "folke/todo-comments.nvim",
--       -- requires = "nvim-lua/plenary.nvim",
--       config = function()
--         require("todo-comments").setup {}
--       end
--     }
--     use "rmagatti/session-lens" -- searching sessions with telescope
--
--     -- Colorizer
--     use {
--       "norcalli/nvim-colorizer.lua",
--       config = function()
--         require "colorizer".setup()
--       end
--     }
--
--     -- ASCII diagrams
--     -- use "jbyuki/venn.nvim"
--
--     -- Life management
--     -- use "vimwiki/vimwiki" -- zettelkasten
--     use {
--       'phaazon/mind.nvim',
--       branch = 'v2.2',
--       requires = { 'nvim-lua/plenary.nvim' },
--       config = function()
--         require'mind'.setup()
--       end
--     }
--     use "jbyuki/nabla.nvim" -- view equations
--       -- Telekasten
--     use "itchyny/calendar.vim" --scheduling
--     -- use "renerocksai/calendar-vim" -- fork with fixed week calculations
--     use "mzlogin/vim-markdown-toc"
--       -- org-mode
--       -- neorg
--     use "nvim-neorg/neorg"
--
--     --notifications
--     use "rcarriga/nvim-notify"
--
--     -- Image support
--     use {
--       'edluffy/hologram.nvim',
--       -- config = function ()
--       --   require('hologram').setup()
--       -- end
--     }
--
--     -- quality of life improvements
--     use {
--       "folke/twilight.nvim",
--       config = function()
--         require("twilight").setup {
--           -- your configuration comes here
--           -- or leave it empty to use the default settings
--           -- refer to the configuration section below
--         }
--       end
--     }
--     use {
--       "folke/zen-mode.nvim",
--       config = function()
--         require("zen-mode").setup {
--           -- your configuration comes here
--           -- or leave it empty to use the default settings
--           -- refer to the configuration section below
--         }
--       end
--
--     }
--
--     -- platformio deps
--     use "normen/vim-pio"
--
--   end
-- ,
-- config = {
--     -- Move to lua dir so impatient.nvim can cache it
--     compile_path = vim.fn.stdpath('config')..'/lua/packer_compiled.lua'

